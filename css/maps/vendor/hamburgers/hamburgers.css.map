{"version":3,"sources":["vendor/hamburgers/hamburgers.scss","vendor/hamburgers/_base.scss","vendor/hamburgers/types/_spin.scss"],"names":[],"mappings":"AACA;;;;;;ACCA,WACE,QDS+B,KADA,KCP/B,QAAS,aACT,OAAQ,QACR,oBAAqB,OAAA,CAAA,OACrB,oBAAqB,KACrB,2BAA4B,OAC5B,QAAS,EACT,UAAW,KAQX,KAAM,QACN,MAAO,QACP,eAAgB,KAChB,iBAAkB,YAClB,OAAQ,EACR,OAAQ,EACR,SAAU,QAXV,0BAXF,WAYI,UAAW,OAZf,iBA6BM,QDb2B,GChBjC,2BAuCQ,QDvByB,GChBjC,sCAAA,6CAAA,8CA8CM,iBDhC2B,KCqCjC,eAEE,OAAQ,KACR,QAAS,KACT,YAAa,OACb,SAAU,SAGZ,cACE,OAAQ,EAAA,KAAA,EAAA,EACR,0BAFF,qBAIM,QAAS,OACT,SAAU,SACV,MAAO,KACP,YAAa,eACb,WAAY,OACZ,YAAa,IACb,UAAW,OACX,YAAa,KACb,eAAgB,MAChB,eAAgB,UAChB,MAAO,MAKb,iBACE,QAAS,MACT,IAAK,IACL,WAAY,MAHd,iBAAA,wBAAA,yBAQI,MD3E6B,KC4E7B,OD3E6B,IC4E7B,iBD1E6B,KC2E7B,cD1E6B,EC2E7B,SAAU,SACV,oBAAqB,UACrB,oBAAqB,KACrB,2BAA4B,KAC5B,MAAO,EAhBX,wBAAA,yBAqBI,QAAS,GACT,QAAS,MAtBb,yBA0BI,IAAK,KA1BT,wBA8BI,OAAQ,KC1GV,kCAEI,oBAAqB,KACrB,2BAA4B,gCAHhC,0CAMM,WAAY,IAAA,IAAA,KAAA,OAAA,CAAA,QAAA,IAAA,QANlB,yCAWM,WAAY,OAAO,IAAK,KAAM,OAAO,CACzB,UAAU,KAAM,gCAZlC,4CAkBM,UAAW,eACX,iBAAkB,KAClB,2BAA4B,8BApBlC,oDAuBQ,IAAK,EACL,QAAS,EACT,WAAY,IAAA,IAAA,QAAA,CAAA,QAAA,IAAA,KAAA,SAzBpB,mDA8BQ,OAAQ,EACR,UAAW,eACX,WAAY,OAAO,IAAK,QAAQ,CACpB,UAAU,KAAM,KAAM,8BAKpC,0BAtCN,gDAwCU,QAAS,QACT,MAAO","file":"../../../vendor/hamburgers/hamburgers.css","sourcesContent":["@charset \"UTF-8\";\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n\n// Settings\n// ==================================================\n$hamburger-padding-x           : 15px !default;\n$hamburger-padding-y           : 15px !default;\n$hamburger-layer-width         : 24px !default;\n$hamburger-layer-height        : 1px !default;\n$hamburger-layer-spacing       : 6px !default;\n$hamburger-layer-color         : #000 !default;\n$hamburger-layer-border-radius : 0px !default;\n$hamburger-hover-opacity       : 0.7 !default;\n$hamburger-active-layer-color  : $hamburger-layer-color !default;\n\n$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;\n$screen-md: 1024px !default;\n\n// To use CSS filters as the hover effect instead of opacity,\n// set $hamburger-hover-use-filter as true and\n// change the value of $hamburger-hover-filter accordingly.\n$hamburger-hover-use-filter   : false !default;\n$hamburger-hover-filter       : opacity(50%) !default;\n$hamburger-active-hover-filter: $hamburger-hover-filter !default;\n\n// Types (Remove or comment out what you donâ€™t need)\n// ==================================================\n$hamburger-types: (\n  spin,\n) !default;\n\n// Base Hamburger (We need this)\n// ==================================================\n@import \"base\";\n\n// Hamburger types\n// ==================================================\n@import \"types/spin\";\n\n// ==================================================\n// Cooking up additional types:\n//\n// The Sass for each hamburger type should be nested\n// inside an @if directive to check whether or not\n// it exists in $hamburger-types so only the CSS for\n// included types are generated.\n//\n// e.g. hamburgers/types/_new-type.scss\n//\n// @if index($hamburger-types, new-type) {\n//   .hamburger--new-type {\n//     ...\n//   }\n// }\n","// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n  transition-property: opacity, filter;\n  transition-duration: 0.15s;\n  transition-timing-function: linear;\n  outline: none;\n  min-width: 24px;\n\n \n  @media (min-width:$screen-md) {\n    min-width: 112px;\n  }\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    }\n    @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n\n  &.is-active {\n    &:hover {\n      @if $hamburger-hover-use-filter == true {\n        filter: $hamburger-active-hover-filter;\n      }\n      @else {\n        opacity: $hamburger-active-hover-opacity;\n      }\n    }\n\n    .hamburger-inner,\n    .hamburger-inner::before,\n    .hamburger-inner::after {\n      background-color: $hamburger-active-layer-color;\n    }\n  }\n}\n\n.hamburger-box {\n  //width: $hamburger-layer-width;\n  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.burger-label {\n  margin: 0 34px 0 0;\n  @media (min-width:$screen-md) {\n    &:before {\n      content: \"MENU\";\n      position: relative;\n      width: 42px;\n      font-family: 'Circular Std';\n      font-style: normal;\n      font-weight: 900;\n      font-size: 12.8px;\n      line-height: 180%;\n      letter-spacing: 0.08em;\n      text-transform: uppercase;\n      color: #fff;\n    }\n  }\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: $hamburger-layer-height / -2;\n\n  &,\n  &::before,\n  &::after {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height;\n    background-color: $hamburger-layer-color;\n    border-radius: $hamburger-layer-border-radius;\n    position: absolute;\n    transition-property: transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n    right: 0;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n  }\n\n  &::before {\n    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n\n  &::after {\n    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n}\n","@if index($hamburger-types, spin) {\n  /*\n   * Spin\n   */\n  .hamburger--spin {\n    .hamburger-inner {\n      transition-duration: 0.22s;\n      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\n      &::before {\n        transition: top 0.1s 0.25s ease-in,\n                    opacity 0.1s ease-in;\n      }\n\n      &::after {\n        transition: bottom 0.1s 0.25s ease-in,\n                    transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n      }\n    }\n\n    &.is-active {\n      .hamburger-inner {\n        transform: rotate(225deg);\n        transition-delay: 0.12s;\n        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n        &::before {\n          top: 0;\n          opacity: 0;\n          transition: top 0.1s ease-out,\n          opacity 0.1s 0.12s ease-out;\n        }\n\n        &::after {\n          bottom: 0;\n          transform: rotate(-90deg);\n          transition: bottom 0.1s ease-out,\n                      transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);\n        }\n      }\n\n      .burger-label {\n        @media (min-width:$screen-md) {\n          &:before {\n            content: \"CLOSE\";\n            color: #000 !important;\n          }\n        }\n      }\n    }\n  }\n}\n"]}